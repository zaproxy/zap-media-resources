1
00:00:00,960 --> 00:00:10,880
Hello and welcome to another episode of ZAP Chat with myself and Yiannis.

2
00:00:10,880 --> 00:00:12,000
Hello.

3
00:00:12,000 --> 00:00:20,640
So this week, we're not going to talk about ZAP features or not exactly about ZAP features,

4
00:00:21,440 --> 00:00:25,520
rather about how certain ways ZAP features can get created.

5
00:00:25,520 --> 00:00:29,840
In this case, what we're talking about is Google Summer of Code.

6
00:00:29,840 --> 00:00:33,760
So, Simon, what is the Google Summer of Code for somebody who's never heard the term

7
00:00:33,760 --> 00:00:35,840
ever before? What are we talking about?

8
00:00:35,840 --> 00:00:40,400
Yeah. So Google Summer of Code is an initiative from Google, surprisingly enough.

9
00:00:41,520 --> 00:00:47,280
And it's all about getting new people involved in open source. And it's been running for a long

10
00:00:47,280 --> 00:00:53,680
time. I should have checked to see how long it's been going for. But it's a great initiative.

11
00:00:54,480 --> 00:00:59,680
We have taken, the ZAP team has taken part in it for many years. And we've had some

12
00:00:59,840 --> 00:01:09,120
absolutely key features implemented through this program. So it's been really big for us.

13
00:01:09,120 --> 00:01:16,480
And we count Google as a sponsor of ZAP just on this basis because it's given us so much benefit.

14
00:01:17,200 --> 00:01:20,080
So that is what Google Summer of Code is.

15
00:01:20,080 --> 00:01:22,400
Sorry, does it take place during the summer?

16
00:01:22,400 --> 00:01:28,880
Yeah. So it used to be just students, but Google have expanded it now. So I think anyone can take

17
00:01:28,880 --> 00:01:29,200
part.

18
00:01:29,840 --> 00:01:34,960
And what happens is organizations apply to Google and they say they want to take part

19
00:01:34,960 --> 00:01:44,160
and they've accepted. Then potential contributors can propose projects or pick projects that are

20
00:01:44,160 --> 00:01:50,560
proposed by the open source projects. And then Google will assign a certain number of projects

21
00:01:50,560 --> 00:01:55,360
to each organization. There's then a bit of a bun fight with an organization to see which

22
00:01:55,360 --> 00:01:59,280
projects get selected. And then Google will pay

23
00:01:59,840 --> 00:02:03,680
those contributors to work on the projects over the summer.

24
00:02:03,680 --> 00:02:05,600
And the projects can be of different lengths. This kind

25
00:02:05,600 --> 00:02:10,160
of changed recently, but all the details are on the Google Summer of Code site,

26
00:02:10,160 --> 00:02:16,160
and I'll share a link with that later and put it in the YouTube chat as well.

27
00:02:16,160 --> 00:02:21,760
So overall, we've got an initiative by Google to help open source projects. I remember

28
00:02:22,400 --> 00:02:29,600
GSoC back in 2007 when OWASP was flirting with it and it was, you know, it was a,

29
00:02:29,840 --> 00:02:34,460
question which projects are going to be part of the google summer of code as you say a little bit

30
00:02:34,460 --> 00:02:41,780
of a bum fight like you know who gets the the resources and what what kind of features

31
00:02:41,780 --> 00:02:49,220
has the google summer of code delivered for ZAP? So some of the absolute key ones what i'll do

32
00:02:49,220 --> 00:02:55,820
just just while we're mentioning you know here's my t-shirt so so what's happened is ZAP has

33
00:02:55,820 --> 00:03:02,320
taken part in google summer of code for quite a few years as part of the OWASP organization.

34
00:03:02,320 --> 00:03:08,060
Obviously, ZAP is no longer part of OWASP we're part of the software security project which is

35
00:03:08,060 --> 00:03:13,900
part of the linux foundation so we've talked to the linux foundation google summer of code admins

36
00:03:13,900 --> 00:03:18,140
and they've said we can take part. So we're really hoping to take part this year again

37
00:03:18,140 --> 00:03:24,020
and if for any reason say linux foundation doesn't get places or there aren't enough places for ZAP

38
00:03:24,020 --> 00:03:25,800
then we will do our best to make sure 

39
00:03:25,800 --> 00:03:31,080
this happens one way or another. There's a set of companies who are using ZAP

40
00:03:31,080 --> 00:03:35,780
and have said they'll sponsor things like this so we want to take part in google summer of code

41
00:03:35,780 --> 00:03:41,020
and we want to sponsor students one way or another so.. yeah this is something which we are

42
00:03:41,020 --> 00:03:47,980
going to make happen. We're going to continue, yeah absolutely. So let me just share my screen

43
00:03:47,980 --> 00:03:54,080
and.. We've got lovely documentation going back to 2012.

44
00:03:55,800 --> 00:04:03,340
Yeah, so if you what i was going to do actually is go to just show how i get here so from

45
00:04:03,340 --> 00:04:11,580
zaproxy.org if you go to community and then scroll down through about ZAP get in touch report

46
00:04:11,580 --> 00:04:17,860
problems and get involved you'll see you've got the contributing guide which is very key

47
00:04:17,860 --> 00:04:23,380
and lower down here there's a new set of pages we only added recently for google summer of code.

48
00:04:23,380 --> 00:04:25,780
And what 

49
00:04:25,800 --> 00:04:31,540
this page, this landing page has some advice and guidance which we'll talk about in a bit

50
00:04:31,540 --> 00:04:36,180
then it goes back and yeah these are all the years that ZAP has taken part

51
00:04:36,180 --> 00:04:43,740
and the first five we've got separate pages for we will add pages for the others it just takes time

52
00:04:43,740 --> 00:04:48,480
and we just we just wanted to get this pair of this set of pages live as soon as we could.

53
00:04:48,480 --> 00:04:55,100
So if you go back to.. right back to 2012 then the first year we took part was actually

54
00:04:55,800 --> 00:05:02,020
three projects which wasn't i i think the first time you take part a project you only have one

55
00:05:02,020 --> 00:05:07,900
google summer of code projects, but we ended up with three which is a bit bizarre, but that

56
00:05:07,900 --> 00:05:17,160
was actually two of these were through a OWASP. So the.. the crawler was a redesign with session

57
00:05:17,160 --> 00:05:23,480
support that's the traditional spider and that was the only project assigned to ZAP, but then the

58
00:05:23,480 --> 00:05:24,880
Ajax spider was actually

59
00:05:25,800 --> 00:05:31,860
designed to another OWASP project but it turned out that was a very small shim around another

60
00:05:31,860 --> 00:05:38,140
project which wasn't OWASP project so in the end it got transferred to ZAP, because that was

61
00:05:38,140 --> 00:05:43,740
the Ajax spider and it was a wrapper around crawljax. So the Ajax spider came out of google summer

62
00:05:43,740 --> 00:05:49,380
of code and as did a lot of changes to the traditional spider and web socket testing

63
00:05:49,380 --> 00:05:55,620
which was actually assigned to mozilla, but then i i joined mozilla and

64
00:05:55,800 --> 00:06:01,320
this was it was it was always designed to intended to be ZAP project anyway it was just

65
00:06:01,320 --> 00:06:07,240
sponsored by mozilla. So we end up mentoring them as well. So very first year google summer

66
00:06:07,240 --> 00:06:14,140
code we mentored three projects which was challenging, but really good. Then 2013

67
00:06:14,140 --> 00:06:20,600
BIRT reporting which hasn't actually that hasn't survived, but there's a lot of zest enhancements

68
00:06:20,600 --> 00:06:25,400
a load of Session Handling and SAML v2 support.

69
00:06:25,800 --> 00:06:34,960
Then 2014 advanced fuzzing, SOAP support, Access Control Testing, 2016 bug tracker support and

70
00:06:34,960 --> 00:06:42,840
we hope to be adding to that more in fairly soon. 2018 the Authentication Helper and scanning web

71
00:06:42,840 --> 00:06:50,740
sockets the first phase, 2019 second phase of scanning web sockets, 2020 GraphQL support another

72
00:06:50,740 --> 00:06:55,220
big one, 2021 out-of-band Application Security Testing

73
00:06:55,800 --> 00:07:07,540
another really big change and Retesting Alerts. Then 2022 Param Digger this is actually a a port of a burp suite add-on which is

74
00:07:07,540 --> 00:07:15,660
add-on.. yeah.. very useful and then 2023 the Browser Recorder and Postman Support. So as you can see

75
00:07:15,660 --> 00:07:22,440
some really significant key developments have been implemented by students working on google

76
00:07:22,440 --> 00:07:25,720
summer of code. Students and beyond, yeah absolutely

77
00:07:25,800 --> 00:07:34,280
and 2024 is a year that we're planning right now. So.. Exactly!.. i can see the page start getting involved.

78
00:07:34,280 --> 00:07:40,040
So what are we doing this year when it comes to the GSoC? So, as always what we do is we suggest

79
00:07:40,040 --> 00:07:44,040
a set of projects, but we have no problem if people come up with their own ideas.

80
00:07:44,760 --> 00:07:50,040
If you come up with your own ideas it's always good to chat to the to us the ZAP core team

81
00:07:50,040 --> 00:07:55,640
we'll get into discussion about it. We always get some proposals that are a bit

82
00:07:55,800 --> 00:08:01,640
left field and haven't been discussed with us and we're going to reject those. I'm sorry,

83
00:08:01,640 --> 00:08:06,360
but if it's completely new and we know nothing about it, you haven't talked to us about it,

84
00:08:07,160 --> 00:08:13,720
it's going to go unless it's really interesting, but it's it's too by the time we the

85
00:08:14,840 --> 00:08:18,760
the the call for papers or whatever you want to call it has finished by the time the proposals

86
00:08:18,760 --> 00:08:25,080
are in we have to base we have to decide on that basis. If it's completely new to us it's

87
00:08:25,800 --> 00:08:33,080
going to be somewhat out there and we need to we should have discussed it by then. So get in touch

88
00:08:33,080 --> 00:08:38,600
that's the main thing... and and you are competing for those of you out there thinking you know i

89
00:08:38,600 --> 00:08:42,680
want to do my own. You are competing with some brilliant ideas that have come up

90
00:08:42,680 --> 00:08:49,000
through community so and we'll go through those for example AI and how that can be

91
00:08:49,000 --> 00:08:55,320
used in the context of dast dynamic testing, that's one example. We talked about a number of times

92
00:08:55,800 --> 00:08:59,360
how our GUI perhaps needs a revamp.

93
00:08:59,580 --> 00:09:01,320
Well, the topic has come up of,

94
00:09:01,460 --> 00:09:03,220
well, do we need a web-based GUI as well?

95
00:09:03,240 --> 00:09:05,320
And do we need to augment the existing GUI

96
00:09:05,320 --> 00:09:08,060
instead of just updating it with another web-based UI?

97
00:09:09,640 --> 00:09:11,060
And of course, gRPC support,

98
00:09:11,700 --> 00:09:14,460
which is, I mean, it's going to be needed

99
00:09:14,920 --> 00:09:16,280
it's, you know, a new protocol.

100
00:09:16,680 --> 00:09:20,280
That is something that, you know, is just going to be a feature

101
00:09:20,280 --> 00:09:21,760
that's going to be added over time.

102
00:09:22,100 --> 00:09:22,500
So there you go.

103
00:09:22,560 --> 00:09:24,040
You have three things already,

104
00:09:24,040 --> 00:09:26,340
and we'll talk about these in more detail.

105
00:09:26,640 --> 00:09:28,020
But please remember, you know,

106
00:09:28,060 --> 00:09:29,520
one week before the deadline,

107
00:09:29,680 --> 00:09:31,500
submitting your own new cool idea

108
00:09:31,500 --> 00:09:32,800
without engaging the community

109
00:09:32,800 --> 00:09:36,340
really is not going to drive a GSoC project, right?

110
00:09:36,400 --> 00:09:38,560
It's about being part of that initiative.

111
00:09:39,200 --> 00:09:39,300
Yeah.

112
00:09:39,640 --> 00:09:41,400
You know, we've had some great proposals.

113
00:09:42,060 --> 00:09:44,400
So one of the ones which was a,

114
00:09:44,980 --> 00:09:46,420
sounded like a left-field proposal,

115
00:09:46,760 --> 00:09:51,680
was actually a suggestion to create a Chrome add-on

116
00:09:51,680 --> 00:09:54,020
to add what was effectively a heads-up display.

117
00:09:54,020 --> 00:09:59,060
Now, this was suggested by a student called David Scrobonia,

118
00:09:59,580 --> 00:10:01,040
and we got in touch with him and said,

119
00:10:01,100 --> 00:10:04,400
look, this is unexpected,

120
00:10:04,820 --> 00:10:07,880
partly because we've actually got a proposal for HUD already,

121
00:10:08,060 --> 00:10:08,680
but it's internal.

122
00:10:09,260 --> 00:10:12,380
So we were already planning to create the HUD,

123
00:10:12,800 --> 00:10:16,700
but we decided we didn't want to use a browser add-on

124
00:10:16,700 --> 00:10:20,060
because we thought it would be easier.

125
00:10:20,220 --> 00:10:21,880
Well, we thought it'd be more flexible

126
00:10:21,880 --> 00:10:23,960
if ZAP injected the content,

127
00:10:23,960 --> 00:10:25,280
rather than having an add-on,

128
00:10:25,560 --> 00:10:26,980
whether it's a good idea or not, it's another matter.

129
00:10:27,800 --> 00:10:31,000
So we talked to David and he agreed

130
00:10:31,000 --> 00:10:34,100
that he would actually work on the proposal

131
00:10:34,100 --> 00:10:35,680
that we were thinking of.

132
00:10:36,060 --> 00:10:37,640
We had a POC working,

133
00:10:38,180 --> 00:10:42,460
but we had nothing actually published.

134
00:10:43,120 --> 00:10:45,220
And we agreed that it'd be best

135
00:10:45,220 --> 00:10:47,600
if he didn't take part in Google Summer of Code

136
00:10:47,600 --> 00:10:49,520
because it was a huge project

137
00:10:49,520 --> 00:10:52,160
and we knew it wouldn't get completed in one summer.

138
00:10:52,640 --> 00:10:53,840
So he was actually fine

139
00:10:53,840 --> 00:10:55,720
with that and he worked on it

140
00:10:55,720 --> 00:10:57,560
and he carried on working on it

141
00:10:57,560 --> 00:11:01,140
and it got published a couple of years later or something.

142
00:11:01,140 --> 00:11:05,140
But so we worked with him and it was a great idea

143
00:11:05,140 --> 00:11:08,360
and it wasn't one of the projects we proposed.

144
00:11:08,360 --> 00:11:12,620
So we're very happy to hear about new suggestions,

145
00:11:12,620 --> 00:11:14,420
but just get in touch and talk to us.

146
00:11:15,520 --> 00:11:19,100
So Simon, you mentioned that this particular feature

147
00:11:19,100 --> 00:11:21,160
took a little while to implement.

148
00:11:21,160 --> 00:11:23,440
What sort of timelines are we putting around, you know,

149
00:11:23,440 --> 00:11:27,120
small, medium, and large Google Summer of Code projects?

150
00:11:27,120 --> 00:11:33,400
So there are guidelines on the Google project.

151
00:11:33,400 --> 00:11:34,400
I can't remember what they are,

152
00:11:34,400 --> 00:11:36,100
but there's a certain number of hours.

153
00:11:36,100 --> 00:11:38,420
And so we'll have to have a look into that,

154
00:11:38,420 --> 00:11:41,440
but have a look at the Google website,

155
00:11:41,440 --> 00:11:42,720
Google Summer of Code.

156
00:11:42,720 --> 00:11:47,720
And so I think if we go back, then that is the link.

157
00:11:48,920 --> 00:11:49,760
Yep.

158
00:11:49,760 --> 00:11:53,240
So this is, so basically the Org applications

159
00:11:53,240 --> 00:11:58,240
are open now and it's got details there,

160
00:11:58,560 --> 00:12:00,580
but basically we're kind of looking

161
00:12:00,580 --> 00:12:02,300
at the getting the organization.

162
00:12:02,300 --> 00:12:04,000
So the organizations can apply.

163
00:12:04,000 --> 00:12:05,780
So OWASP and the Linux Foundation

164
00:12:05,780 --> 00:12:07,340
will be applying right now.

165
00:12:08,540 --> 00:12:13,540
So we will, obviously once we know that the organization,

166
00:12:14,260 --> 00:12:16,180
the Linux Foundation has been accepted,

167
00:12:16,180 --> 00:12:19,300
then we can update, we can double check

168
00:12:19,300 --> 00:12:20,740
on how long the projects are,

169
00:12:20,740 --> 00:12:23,180
but basically they're kind of over the summer.

170
00:12:23,240 --> 00:12:26,560
So they are medium sized projects,

171
00:12:26,560 --> 00:12:28,140
but there are different options,

172
00:12:28,140 --> 00:12:31,460
but the ones that we've got are fairly significant.

173
00:12:31,460 --> 00:12:35,840
And so, you know, gRPC support.

174
00:12:35,840 --> 00:12:39,080
So that is a new protocol

175
00:12:39,080 --> 00:12:40,900
and we know that, you know,

176
00:12:40,900 --> 00:12:43,200
ZAP will intercept these requests,

177
00:12:43,200 --> 00:12:46,100
but we will show them as binary requests,

178
00:12:46,100 --> 00:12:48,500
and this is not unusual.

179
00:12:48,500 --> 00:12:50,960
So any new protocol comes along if it's using it,

180
00:12:50,960 --> 00:12:52,680
it is based on top of Web Technology.

181
00:12:52,680 --> 00:13:02,920
We should be able to see them, but we don't actually, ZAP doesn't understand them and can't present them to the user in a useful way and can't do fun things like attack them.

182
00:13:03,580 --> 00:13:08,900
So this is a really good project if you're interested in protocols

183
00:13:09,780 --> 00:13:13,700
and this is one where ZAP is written in Java.

184
00:13:14,380 --> 00:13:17,840
So good Java skills are pretty essential for this.

185
00:13:17,840 --> 00:13:23,140
And I remember, you know, talking about binary protocols.

186
00:13:23,300 --> 00:13:33,040
I remember, you know, when everybody was using parts of Adobe Flash or other technology for binary, and it was all about supporting RTMPS or some other similar protocols.

187
00:13:33,520 --> 00:13:37,700
So gRPC falls in that category of a remote procedure call protocol

188
00:13:37,920 --> 00:13:45,140
and it's just part of expanding the protocol interface to be able to see more than just a binary blob in your view.

189
00:13:45,140 --> 00:13:46,860
So that's going to be an amazing feature.

190
00:13:47,440 --> 00:13:47,800
Also.

191
00:13:47,840 --> 00:13:57,680
potentially, we could see, you know, depending on how Google Summer of Code goes, whether or not specific payloads could be injected as part of the parameters inside those gRPC calls.

192
00:13:58,440 --> 00:14:00,200
But first, you've got to read the protocol, right?

193
00:14:00,340 --> 00:14:02,660
First, you've got to be able to sit in the middle of it.

194
00:14:02,660 --> 00:14:17,360
And this is, yeah, this is very, you know, you start with a new protocol, basically, you have to, you know, code ZAP to understand the protocol and display it to the user so that, I mean, you just get good feedback that way

195
00:14:17,440 --> 00:14:17,820
you go, okay.

196
00:14:17,920 --> 00:14:19,020
Yep, this is looking right.

197
00:14:19,360 --> 00:14:25,500
But then if you do that, then it's quite easy to get ZAP to understand, this is what you can attack

198
00:14:25,980 --> 00:14:28,880
and we have these layers of separation.

199
00:14:29,340 --> 00:14:32,080
And one of the things we have is input vectors.

200
00:14:32,620 --> 00:14:35,220
An input vectors are the things that ZAP can attack.

201
00:14:35,880 --> 00:14:41,760
So as long as, if you add input vectors for a new protocol, then all of a sudden ZAP can attack them.

202
00:14:42,120 --> 00:14:46,420
And we don't have to make any changes to any of these existing scan rules.

203
00:14:46,840 --> 00:14:47,440
So you've got existing rules.

204
00:14:47,440 --> 00:14:50,600
Existing scan rules that say to SQL injection.

205
00:14:51,120 --> 00:14:59,120
If ZAP understands the gRPC protocol, then the SQL injection rules will work.

206
00:14:59,680 --> 00:15:15,780
And then, you know, if we get things like SQL errors coming back in the responses or we get long delays when we inject timing attacks, then we will be able to find vulnerabilities with no extra changes using existing rules.

207
00:15:15,780 --> 00:15:21,780
Having said that, there may well be new rules that are specific to gRPC.

208
00:15:22,740 --> 00:15:23,380
Yeah, absolutely.

209
00:15:23,700 --> 00:15:25,540
Might be the new set of payloads, right?

210
00:15:25,580 --> 00:15:27,680
I don't know what SQL injection is for the gRPC.

211
00:15:28,580 --> 00:15:35,480
So for something like SOAP, ZAP understands SOAP, and this was a Google Summer of Code project.

212
00:15:35,920 --> 00:15:40,020
And part of that was actually adding some SOAP-specific scan rules.

213
00:15:40,420 --> 00:15:45,760
So this, again, this is understanding the protocol, teaching ZAP what can be attacked.

214
00:15:45,820 --> 00:15:54,840
And then potentially adding new payloads and new attacks, new active scan rules for targeting gRPC.

215
00:15:55,700 --> 00:15:56,920
Good old fuzzing.

216
00:15:57,380 --> 00:16:02,560
The next one is not a fuzzing or a protocol feature, but it talks about the web-based UI.

217
00:16:03,100 --> 00:16:04,840
So what's this about?

218
00:16:05,520 --> 00:16:05,720
Yeah.

219
00:16:05,860 --> 00:16:10,440
So as you know, Yiannis, we've got various surveys.

220
00:16:10,880 --> 00:16:12,160
We've had them over the years.

221
00:16:12,740 --> 00:16:15,200
It's a good way for us to get feedback.

222
00:16:15,200 --> 00:16:20,680
And we do get some feedback online and via user group and things like that.

223
00:16:21,160 --> 00:16:27,980
And one thing we do keep on hearing is that the ZAP desktop UI is not as modern as it could be.

224
00:16:28,100 --> 00:16:29,580
It is somewhat old-fashioned,

225
00:16:29,740 --> 00:16:30,400
it's a bit clunky,

226
00:16:30,980 --> 00:16:32,400
it's a swing-based GUI.

227
00:16:33,120 --> 00:16:35,100
So, yeah, we know it's a bit old

228
00:16:35,740 --> 00:16:39,160
and we know that some people don't like it.

229
00:16:39,540 --> 00:16:40,800
Now, some people do like it

230
00:16:41,580 --> 00:16:45,080
and what we've been talking about within the team is,

231
00:16:45,200 --> 00:16:46,000
what do we do?

232
00:16:46,540 --> 00:16:50,140
One option is to revamp the swing-based UI.

233
00:16:50,800 --> 00:16:54,140
And we could completely change how it works, its look and feel,

234
00:16:54,620 --> 00:16:59,100
but then there's a danger of actually pissing off the people who do actually like it

235
00:16:59,100 --> 00:17:00,460
and have got used to how it works.

236
00:17:01,660 --> 00:17:06,480
So one suggestion that came up was, well, why don't we actually have a web-based GUI?

237
00:17:07,080 --> 00:17:12,060
And this is not that unusual for desktop applications these days.

238
00:17:12,420 --> 00:17:13,880
Quite a few are going down this route.

239
00:17:14,120 --> 00:17:14,760
Now,

240
00:17:15,200 --> 00:17:19,040
some of them are using Electron as a kind of basis for that.

241
00:17:19,640 --> 00:17:21,780
But that's not the direction we want to go,

242
00:17:22,120 --> 00:17:27,920
because ZAP already has a runtime and you already need to use the browser.

243
00:17:28,420 --> 00:17:30,400
So let's just use the browser.

244
00:17:31,140 --> 00:17:37,640
And so what we're talking about is a web-based GUI that drives the existing ZAP API.

245
00:17:38,380 --> 00:17:40,900
ZAP has a very thorough API

246
00:17:41,580 --> 00:17:44,500
and if you start working on this and you find out that there are 

247
00:17:44,500 --> 00:17:44,620


248
00:17:44,620 --> 00:17:45,000


249
00:17:45,000 --> 00:17:47,100
API calls that you need that aren't there,

250
00:17:47,440 --> 00:17:49,160
then that's something we can add in the core team.

251
00:17:49,880 --> 00:17:55,800
So this is an unusual project in that. It's not one that requires Java skills.

252
00:17:56,080 --> 00:18:01,480
It actually requires sort of modern web app skills.

253
00:18:01,620 --> 00:18:03,900
So we're talking about JavaScript and preferably TypeScript.

254
00:18:05,520 --> 00:18:08,020
There's a lot of things that you get for free in the modern browser,

255
00:18:08,180 --> 00:18:09,480
like, you know, the memory management.

256
00:18:09,480 --> 00:18:13,840
Imagine having a sites tree, you know, a big spidering operation that you've run.

257
00:18:13,840 --> 00:18:18,620
And, you know, for all the memory that Java can consume,

258
00:18:18,620 --> 00:18:24,160
if you do that lookup for a specific URL or, you know, a specific parameter,

259
00:18:24,160 --> 00:18:30,260
it's much easier to do that in the browser because browsers are now built in a way

260
00:18:30,260 --> 00:18:35,620
that they can handle, you know, big chunks of memory being addressed for searching, right?

261
00:18:37,340 --> 00:18:43,320
Swing, for all its downsides, is the default still Java,

262
00:18:43,320 --> 00:18:46,620
but the interface Eclipse still uses as one example.

263
00:18:46,620 --> 00:18:50,420
And there isn't a better one for the lack of what we have out there.

264
00:18:50,500 --> 00:18:53,400
It's not that Oracle or SANA, you know, whoever out there has put out,

265
00:18:53,600 --> 00:18:58,380
or, you know, the Apache Foundation has put out a different set of libraries that we can use.

266
00:18:58,680 --> 00:19:03,440
So I think your, you know, your description of having a web-based GUI

267
00:19:03,440 --> 00:19:09,960
to augment the existing GUI goes a long way as to what the future should look like.

268
00:19:09,960 --> 00:19:13,140
Also, there's probably features that should not be,

269
00:19:13,320 --> 00:19:18,120
in the web-based GUI, like, you know, I can't think of how you would do,

270
00:19:18,120 --> 00:19:23,600
shall we pick, like, you know, an advanced fuzzing session, for example, right?

271
00:19:23,600 --> 00:19:35,040
Maybe, I mean, this is one where I think it's an opportunity to completely reimagine the ZAP interface.

272
00:19:35,040 --> 00:19:39,720
And, you know, we had a go at this with the HUD and I still like the HUD,

273
00:19:39,720 --> 00:19:42,700
but I think this, and maybe this web-based UI,

274
00:19:43,320 --> 00:19:46,400
could interact with the HUD in some way, but I think that it's separate.

275
00:19:46,860 --> 00:19:49,500
So it is a UI focused on ZAP.

276
00:19:49,800 --> 00:19:53,700
So we're not having that overlay over the target application,

277
00:19:54,420 --> 00:19:59,400
but you don't have to copy the existing ZAP GUI.

278
00:19:59,400 --> 00:20:00,700
And in fact, you probably shouldn't.

279
00:20:01,100 --> 00:20:06,960
So it's an option to think of it in a different way and hopefully more flexible way.

280
00:20:07,100 --> 00:20:12,560
So maybe something that, you know, different types of users can configure in different ways

281
00:20:12,560 --> 00:20:13,060
so they can handle it.

282
00:20:13,320 --> 00:20:15,900
And then get ZAP to work the way they want it to work.

283
00:20:17,200 --> 00:20:19,040
Yeah. And it goes back to the user persona side of it.

284
00:20:19,040 --> 00:20:19,540
Absolutely.

285
00:20:19,540 --> 00:20:24,420
So you have, in essence, you've got a couple of personas that are meant, you know, for the web-based UI.

286
00:20:24,420 --> 00:20:31,500
Anything that's CI/CD, operational, DevSecOps, people are used to in operation rooms, right?

287
00:20:31,500 --> 00:20:33,140
Not just SOCs, just operation rooms.

288
00:20:33,140 --> 00:20:38,840
Having a web-based browser open and seeing specific things happen in real time.

289
00:20:38,840 --> 00:20:42,920
I think that's a place where, you know, the web-based UI could excel.

290
00:20:42,920 --> 00:20:43,300


291
00:20:43,300 --> 00:20:45,420
Make some scanning as well.

292
00:20:45,420 --> 00:20:53,680
I just don't see the web-based UI being there, you know, for the red teams out there or the, well, I don't know.

293
00:20:53,680 --> 00:21:02,180
Maybe it is out there and I'm, you know, I'm, you know, in like that button that you click in order to be able to do a specific feature.

294
00:21:02,180 --> 00:21:11,180
But there's definitely stuff to be looked at in terms of which personas would best fit the web-based UI and which, you know, are better in that swing world of the GUI.

295
00:21:11,180 --> 00:21:12,180
Yeah.

296
00:21:12,180 --> 00:21:13,180


297
00:21:13,180 --> 00:21:22,020
I think this is something where, you know, we definitely don't expect the full functionality of the ZAP desktop to be reply by to be implemented as part of this project.

298
00:21:22,240 --> 00:21:23,940
It's very much a starting point.

299
00:21:24,540 --> 00:21:32,640
And it's something that, you know, let's get something, the key features within ZAP working in a web-based UI.

300
00:21:33,020 --> 00:21:37,220
And we share it with the community and get feedback and see, you know, who likes this?

301
00:21:37,440 --> 00:21:38,860
You know, does it work for people?

302
00:21:38,860 --> 00:21:42,860
What types of ZAP users actually like, you know, want this?

303
00:21:43,180 --> 00:21:44,180


304
00:21:44,180 --> 00:21:45,720
And how do they want to use it?

305
00:21:45,720 --> 00:21:54,220
So it's one where this is almost like a proof of concept, but a working one, a non-trivial one.

306
00:21:54,220 --> 00:21:57,120
And it's something we can release and for people to play around with.

307
00:21:57,120 --> 00:22:01,160
And then this is something that can then be developed over the years.

308
00:22:01,160 --> 00:22:05,520
You know, this is something, if we get the direction right, then this could be a major

309
00:22:05,520 --> 00:22:07,340
part of ZAP going forward.

310
00:22:07,340 --> 00:22:08,340
Absolutely.

311
00:22:08,340 --> 00:22:09,340
Absolutely.

312
00:22:09,340 --> 00:22:11,180
And speaking about direction and an open-ended GSoC so

313
00:22:11,180 --> 00:22:12,180


314
00:22:12,180 --> 00:22:13,180


315
00:22:13,180 --> 00:22:14,180


316
00:22:14,180 --> 00:22:15,180


317
00:22:15,180 --> 00:22:16,180


318
00:22:16,180 --> 00:22:17,180
last but not least, right?

319
00:22:17,180 --> 00:22:18,180
Especially in the current hype that is out there,

320
00:22:18,180 --> 00:22:19,180
AI integration.

321
00:22:19,180 --> 00:22:20,180
Yeah.

322
00:22:20,180 --> 00:22:28,680
This is one which is, yeah, very speculative because, you know, AI is obviously a big thing

323
00:22:28,680 --> 00:22:29,680
right now.

324
00:22:29,680 --> 00:22:34,220
And people, you know, we've had quite a few people get in touch and say, does ZAP support

325
00:22:34,220 --> 00:22:35,220
AI integration?

326
00:22:35,220 --> 00:22:39,060
And our answer is, well, what do you mean by that?

327
00:22:39,060 --> 00:22:41,180
Because there's lots of potential things.

328
00:22:41,180 --> 00:22:43,180
And I think the key thing is...

329
00:22:43,180 --> 00:22:46,180
You asked that question to society, right?

330
00:22:46,180 --> 00:22:49,180
Does, you know, does anything support AI integration?

331
00:22:49,180 --> 00:22:54,180
And one thing you have to think very pragmatically about this, because, you know,

332
00:22:54,180 --> 00:22:59,180
how could AI help ZAP and where wouldn't it be so relevant?

333
00:22:59,180 --> 00:23:04,180
For example, somebody suggested, well, AI could generate payloads.

334
00:23:04,180 --> 00:23:11,180
We can't do that on the fly because, you know, if we have these input vectors, which I'm

335
00:23:11,190 --> 00:23:15,180
mentioning before, and we have scripts, which can generate input vectors.

336
00:23:15,190 --> 00:23:18,180
So you could say, well, we'll get this script to call AI.

337
00:23:18,190 --> 00:23:24,180
Well, input vector scripts or input vectors get called thousands of times a second, a

338
00:23:24,190 --> 00:23:26,180
ridiculous amount.

339
00:23:26,180 --> 00:23:33,180
Performance-wise, you can't make a remote call to an online AI to ask it what the next

340
00:23:33,190 --> 00:23:33,500
payload should be.

341
00:23:33,510 --> 00:23:37,180
So, you know, if you're talking about, well, let's get AI to analyze every request 

342
00:23:37,190 --> 00:23:40,980


343
00:23:36,180 --> 00:23:37,180


344
00:23:37,180 --> 00:23:38,180


345
00:23:38,180 --> 00:23:41,180
and response that ZAP sends, no chance.

346
00:23:41,180 --> 00:23:43,180
You'll absolutely kill the performance.

347
00:23:43,180 --> 00:23:50,180
So you have to kind of think very carefully about where it's practical to integrate AI.

348
00:23:50,180 --> 00:23:52,180
And that's the important thing.

349
00:23:52,180 --> 00:23:57,180
And this is one where we've got some ideas, but we're really interested in what other

350
00:23:57,180 --> 00:23:58,180
people come up with

351
00:23:58,180 --> 00:24:02,180
and if you're listening to this and you're not interested in taking part in Google Summer

352
00:24:02,180 --> 00:24:07,180
of Code, but you've got suggestions on how AI could be integrated, then get in touch.

353
00:24:07,180 --> 00:24:08,180
You know, please let us know,

354
00:24:08,180 --> 00:24:13,180
but this is something that is, you know, if you've got a lot of imagination, you've

355
00:24:13,180 --> 00:24:20,180
got ideas around what AI can do, then this is a great project for you.

356
00:24:20,180 --> 00:24:21,180
Absolutely.

357
00:24:21,180 --> 00:24:25,180
If you look at AI also, integration, you know, that's a broad term.

358
00:24:25,180 --> 00:24:26,180
Intentionally, right?

359
00:24:26,180 --> 00:24:27,180
We didn't put ML.

360
00:24:27,180 --> 00:24:28,180
We didn't go very specific.

361
00:24:28,180 --> 00:24:32,180
We didn't say payloads to allow that open-ended discussion to take place.

362
00:24:32,180 --> 00:24:34,180
Yeah, I think that's really important.

363
00:24:34,180 --> 00:24:37,180
Finally, Simon, when it comes to having my own idea about a project.

364
00:24:37,180 --> 00:24:39,180
How do I get in touch?

365
00:24:39,180 --> 00:24:42,180
So we have, there's loads of ways to get in touch.

366
00:24:42,180 --> 00:24:49,180
If we go back up here and then go to community, there's a section called getting touch.

367
00:24:49,180 --> 00:24:51,180
So we've got the user group.

368
00:24:51,180 --> 00:24:55,180
Actually, the developer group is probably best if you've got an idea you're thinking

369
00:24:55,180 --> 00:24:57,180
of implementing

370
00:24:57,180 --> 00:24:59,180
or the HUD group for now.

371
00:24:59,180 --> 00:25:00,180
IRC.

372
00:25:00,180 --> 00:25:01,180
We're on IRC,

373
00:25:01,180 --> 00:25:03,180
European office hours best.

374
00:25:03,180 --> 00:25:07,180
So I'd say the developer group or IRC are probably best.

375
00:25:07,190 --> 00:25:08,180
But I'm on Twitter.

376
00:25:08,190 --> 00:25:08,980
So ping me.

377
00:25:08,190 --> 00:25:15,180
We're also, we're still hanging out in our Slack in the Project ZAP channel.

378
00:25:15,190 --> 00:25:17,180
But we should be easy to find.

379
00:25:17,190 --> 00:25:19,180
If not, you're really not trying hard enough.

380
00:25:19,190 --> 00:25:19,980
Excellent.

381
00:25:22,180 --> 00:25:24,180
So please, people, get in touch.

382
00:25:24,190 --> 00:25:27,180
Give your input when it comes to the GSoC for 2024.

383
00:25:27,190 --> 00:25:30,180
And more importantly, also, be part of this journey, right?

384
00:25:30,190 --> 00:25:34,180
So whatever projects are going to be selected, you're going to be able to see the progress.

385
00:25:31,180 --> 00:25:32,180


386
00:25:32,180 --> 00:25:33,180


387
00:25:34,190 --> 00:25:35,180
See what people are doing

388
00:25:35,180 --> 00:25:43,180
and probably see the actual output in the lovely GUI of ZAP, which we're about to replace.

389
00:25:43,180 --> 00:25:45,180
But definitely we're thinking about augmenting.

390
00:25:45,180 --> 00:25:47,180
Yeah.

391
00:25:47,180 --> 00:25:54,180
So just going to where is stop share.

392
00:25:54,180 --> 00:25:56,180
Yeah, that's better.

393
00:25:56,180 --> 00:25:57,180
Yeah.

394
00:25:57,180 --> 00:26:00,180
Google Summer of Code is a great initiative.

395
00:26:00,180 --> 00:26:03,180
We've had huge benefit from it in the past.

396
00:26:03,180 --> 00:26:05,180
And really looking forward to this year's projects.

397
00:26:05,180 --> 00:26:13,180
And one thing, quite a few, several Google Summer of Code participants have ended up in the ZAP core team.

398
00:26:13,180 --> 00:26:17,180
It's a really great way to get deeply involved in the project.

399
00:26:17,180 --> 00:26:21,180
Just doing GSoC won't get you on the core team because you're kind of paid to do that.

400
00:26:21,180 --> 00:26:24,180
So we need to see you carry on after that.

401
00:26:24,180 --> 00:26:29,180
But if you carry on contributing to ZAP, then you can definitely get on the core team.

402
00:26:29,180 --> 00:26:31,180
And once you get on the core team, you'll get job offers.

403
00:26:31,180 --> 00:26:34,180
Everybody who's ever been on the ZAP core team has had job offers.

404
00:26:34,180 --> 00:26:39,180
And some of us have even accepted them.

405
00:26:39,180 --> 00:26:40,180
So there you go.

406
00:26:40,180 --> 00:26:41,180
That's a bit of the future.

407
00:26:41,180 --> 00:26:45,180
Starts with a simple Summer of Code project and you end up coding ZAP and being paid for it.

408
00:26:45,180 --> 00:26:49,180
What more do you want as a career progression in 2024?

409
00:26:49,180 --> 00:26:51,180
Exactly.

410
00:26:51,180 --> 00:26:53,180
So thank you very much for listening.

411
00:26:53,180 --> 00:26:59,180
We have a running joke about saying exactly, by the way, which I've been saying too often.

412
00:26:59,180 --> 00:27:00,180
Exactly.

413
00:27:00,180 --> 00:27:01,180
Thanks, everyone.

414
00:27:01,180 --> 00:27:02,180
Thanks a lot.

415
00:27:02,180 --> 00:27:03,180
Bye.